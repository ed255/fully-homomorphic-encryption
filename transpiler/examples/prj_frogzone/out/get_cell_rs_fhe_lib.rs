
use rayon::prelude::*;
use std::collections::HashMap;

use phantom_zone_evaluator::boolean::{fhew::prelude::*, FheBool};

enum GateInput {
    Arg(usize, usize), // arg + index
    Output(usize), // reuse of output wire
    Tv(usize),  // temp value
    Cst(bool),  // constant
}

use GateInput::*;

#[derive(PartialEq, Eq, Hash)]
enum CellType {
    AND2,
    NAND2,
    XOR2,
    XNOR2,
    OR2,
    NOR2,
    INV,
    // TODO: Add back MUX2
}

use CellType::*;


static LEVEL_0: [((usize, bool, CellType), &[GateInput]); 4] = [
    ((225, false, INV), &[Arg(0, 0)]),
    ((233, false, INV), &[Arg(0, 8)]),
    ((242, false, INV), &[Arg(1, 9)]),
    ((249, false, INV), &[Arg(1, 1)]),
];

static LEVEL_1: [((usize, bool, CellType), &[GateInput]); 6] = [
    ((226, false, INV), &[Arg(0, 1)]),
    ((234, false, INV), &[Arg(0, 9)]),
    ((289, false, NAND2), &[Arg(0, 9), Tv(242)]),
    ((290, false, AND2), &[Tv(233), Arg(1, 8)]),
    ((362, false, NAND2), &[Arg(0, 1), Tv(249)]),
    ((363, false, AND2), &[Tv(225), Arg(1, 0)]),
];

static LEVEL_2: [((usize, bool, CellType), &[GateInput]); 10] = [
    ((222, false, INV), &[Arg(1, 6)]),
    ((241, false, INV), &[Arg(1, 8)]),
    ((243, false, INV), &[Arg(1, 10)]),
    ((248, false, INV), &[Arg(1, 0)]),
    ((250, false, INV), &[Arg(1, 2)]),
    ((266, false, INV), &[Arg(2, 51)]),
    ((288, false, NAND2), &[Tv(234), Arg(1, 9)]),
    ((291, false, NAND2), &[Tv(289), Tv(290)]),
    ((361, false, NAND2), &[Tv(226), Arg(1, 1)]),
    ((364, false, NAND2), &[Tv(362), Tv(363)]),
];

static LEVEL_3: [((usize, bool, CellType), &[GateInput]); 26] = [
    ((220, false, INV), &[Arg(1, 4)]),
    ((224, false, INV), &[Arg(1, 15)]),
    ((227, false, INV), &[Arg(0, 2)]),
    ((235, false, INV), &[Arg(0, 10)]),
    ((246, false, INV), &[Arg(1, 13)]),
    ((247, false, INV), &[Arg(1, 14)]),
    ((251, false, INV), &[Arg(1, 3)]),
    ((254, false, INV), &[Arg(2, 10)]),
    ((256, false, INV), &[Arg(2, 12)]),
    ((257, false, INV), &[Arg(2, 14)]),
    ((259, false, INV), &[Arg(2, 18)]),
    ((260, false, INV), &[Arg(2, 21)]),
    ((261, false, INV), &[Arg(2, 22)]),
    ((265, false, INV), &[Arg(2, 50)]),
    ((270, false, INV), &[Arg(2, 59)]),
    ((271, false, INV), &[Arg(2, 63)]),
    ((287, false, NAND2), &[Arg(0, 10), Tv(243)]),
    ((292, false, NAND2), &[Tv(288), Tv(291)]),
    ((302, false, XNOR2), &[Arg(0, 9), Arg(1, 9)]),
    ((309, false, NAND2), &[Arg(0, 8), Tv(241)]),
    ((360, false, NAND2), &[Arg(0, 2), Tv(250)]),
    ((365, false, NAND2), &[Tv(361), Tv(364)]),
    ((376, false, NAND2), &[Arg(0, 0), Tv(248)]),
    ((378, false, XNOR2), &[Arg(0, 1), Arg(1, 1)]),
    ((610, false, NAND2), &[Arg(1, 2), Tv(266)]),
    ((624, false, NAND2), &[Tv(222), Arg(2, 55)]),
];

static LEVEL_4: [((usize, bool, CellType), &[GateInput]); 36] = [
    ((244, false, INV), &[Arg(1, 11)]),
    ((252, false, INV), &[Arg(2, 8)]),
    ((253, false, INV), &[Arg(2, 9)]),
    ((255, false, INV), &[Arg(2, 11)]),
    ((263, false, INV), &[Arg(2, 40)]),
    ((264, false, INV), &[Arg(2, 49)]),
    ((268, false, INV), &[Arg(2, 55)]),
    ((272, false, INV), &[Arg(2, 81)]),
    ((286, false, NAND2), &[Tv(235), Arg(1, 10)]),
    ((293, false, NAND2), &[Tv(287), Tv(292)]),
    ((324, false, NAND2), &[Tv(302), Tv(309)]),
    ((358, false, NAND2), &[Tv(227), Arg(1, 2)]),
    ((366, false, NAND2), &[Tv(360), Tv(365)]),
    ((394, false, NAND2), &[Tv(376), Tv(378)]),
    ((604, false, NAND2), &[Tv(243), Arg(2, 59)]),
    ((605, false, NAND2), &[Tv(250), Arg(2, 51)]),
    ((606, false, NAND2), &[Arg(1, 10), Tv(270)]),
    ((609, false, NAND2), &[Tv(248), Arg(2, 49)]),
    ((612, false, NAND2), &[Tv(247), Arg(2, 63)]),
    ((616, false, NAND2), &[Arg(1, 1), Tv(265)]),
    ((619, false, NAND2), &[Arg(1, 14), Tv(271)]),
    ((633, false, AND2), &[Tv(610), Tv(624)]),
    ((634, false, XNOR2), &[Arg(1, 4), Arg(2, 53)]),
    ((653, false, NAND2), &[Tv(243), Arg(2, 18)]),
    ((654, false, NAND2), &[Arg(1, 10), Tv(259)]),
    ((655, false, NAND2), &[Tv(224), Arg(2, 23)]),
    ((656, false, NAND2), &[Arg(1, 6), Tv(257)]),
    ((657, false, NAND2), &[Arg(1, 4), Tv(256)]),
    ((659, false, NAND2), &[Tv(251), Arg(2, 11)]),
    ((660, false, NAND2), &[Tv(247), Arg(2, 22)]),
    ((667, false, NAND2), &[Tv(220), Arg(2, 12)]),
    ((671, false, NAND2), &[Arg(1, 14), Tv(261)]),
    ((672, false, NAND2), &[Arg(1, 2), Tv(254)]),
    ((674, false, NAND2), &[Tv(222), Arg(2, 14)]),
    ((694, false, NAND2), &[Tv(246), Arg(2, 21)]),
    ((698, false, NAND2), &[Arg(1, 13), Tv(260)]),
];

static LEVEL_5: [((usize, bool, CellType), &[GateInput]); 42] = [
    ((228, false, INV), &[Arg(0, 3)]),
    ((236, false, INV), &[Arg(0, 11)]),
    ((262, false, INV), &[Arg(2, 23)]),
    ((267, false, INV), &[Arg(2, 52)]),
    ((269, false, INV), &[Arg(2, 57)]),
    ((285, false, NAND2), &[Arg(0, 11), Tv(244)]),
    ((294, false, NAND2), &[Tv(286), Tv(293)]),
    ((325, false, AND2), &[Tv(288), Tv(324)]),
    ((357, false, NAND2), &[Arg(0, 3), Tv(251)]),
    ((359, false, INV), &[Tv(358)]),
    ((367, false, NAND2), &[Tv(358), Tv(366)]),
    ((379, false, XNOR2), &[Arg(0, 3), Arg(1, 3)]),
    ((380, false, XNOR2), &[Arg(0, 2), Arg(1, 2)]),
    ((395, false, AND2), &[Tv(361), Tv(394)]),
    ((611, false, NAND2), &[Arg(1, 0), Tv(264)]),
    ((613, false, XNOR2), &[Arg(1, 9), Arg(2, 58)]),
    ((614, false, XNOR2), &[Arg(1, 5), Arg(2, 54)]),
    ((618, false, NAND2), &[Tv(251), Arg(2, 52)]),
    ((621, false, NAND2), &[Tv(241), Arg(2, 57)]),
    ((622, false, NAND2), &[Arg(1, 6), Tv(268)]),
    ((632, false, XNOR2), &[Arg(1, 15), Arg(2, 64)]),
    ((635, false, AND2), &[Tv(633), Tv(634)]),
    ((640, false, AND2), &[Tv(272), Tv(612)]),
    ((643, false, AND2), &[Tv(605), Tv(616)]),
    ((645, false, AND2), &[Tv(604), Tv(609)]),
    ((646, false, AND2), &[Tv(606), Tv(619)]),
    ((661, false, NAND2), &[Tv(241), Arg(2, 16)]),
    ((663, false, XNOR2), &[Arg(1, 9), Arg(2, 17)]),
    ((664, false, XNOR2), &[Arg(1, 12), Arg(2, 20)]),
    ((665, false, NAND2), &[Tv(250), Arg(2, 10)]),
    ((666, false, NAND2), &[Arg(1, 0), Tv(252)]),
    ((669, false, NAND2), &[Arg(1, 3), Tv(255)]),
    ((670, false, NAND2), &[Arg(1, 1), Tv(253)]),
    ((673, false, NAND2), &[Tv(248), Arg(2, 8)]),
    ((675, false, NAND2), &[Tv(249), Arg(2, 9)]),
    ((684, false, AND2), &[Tv(653), Tv(656)]),
    ((687, false, AND2), &[Tv(657), Tv(659)]),
    ((689, false, AND2), &[Tv(655), Tv(674)]),
    ((690, false, AND2), &[Tv(667), Tv(672)]),
    ((695, false, AND2), &[Tv(263), Tv(694)]),
    ((699, false, AND2), &[Tv(660), Tv(698)]),
    ((701, false, AND2), &[Tv(654), Tv(671)]),
];

static LEVEL_6: [((usize, bool, CellType), &[GateInput]); 31] = [
    ((245, false, INV), &[Arg(1, 12)]),
    ((284, false, NAND2), &[Tv(236), Arg(1, 11)]),
    ((295, false, NAND2), &[Tv(285), Tv(294)]),
    ((327, false, NAND2), &[Tv(286), Tv(325)]),
    ((356, false, NAND2), &[Tv(228), Arg(1, 3)]),
    ((368, false, NAND2), &[Tv(357), Tv(367)]),
    ((381, false, AND2), &[Tv(379), Tv(380)]),
    ((396, false, INV), &[Tv(395)]),
    ((398, false, NAND2), &[Tv(357), Tv(359)]),
    ((608, false, NAND2), &[Tv(249), Arg(2, 50)]),
    ((615, false, XNOR2), &[Arg(1, 12), Arg(2, 61)]),
    ((617, false, NAND2), &[Arg(1, 8), Tv(269)]),
    ((620, false, NAND2), &[Arg(1, 3), Tv(267)]),
    ((623, false, AND2), &[Tv(621), Tv(622)]),
    ((636, false, AND2), &[Tv(632), Tv(635)]),
    ((637, false, AND2), &[Tv(611), Tv(618)]),
    ((641, false, AND2), &[Tv(613), Tv(640)]),
    ((644, false, AND2), &[Tv(614), Tv(643)]),
    ((647, false, AND2), &[Tv(645), Tv(646)]),
    ((658, false, NAND2), &[Arg(1, 15), Tv(262)]),
    ((662, false, XNOR2), &[Arg(1, 11), Arg(2, 19)]),
    ((676, false, AND2), &[Tv(665), Tv(670)]),
    ((677, false, XNOR2), &[Arg(1, 5), Arg(2, 13)]),
    ((679, false, XNOR2), &[Arg(1, 7), Arg(2, 15)]),
    ((680, false, AND2), &[Tv(669), Tv(675)]),
    ((685, false, AND2), &[Tv(661), Tv(684)]),
    ((688, false, AND2), &[Tv(666), Tv(687)]),
    ((691, false, AND2), &[Tv(689), Tv(690)]),
    ((696, false, AND2), &[Tv(663), Tv(695)]),
    ((700, false, AND2), &[Tv(664), Tv(699)]),
    ((702, false, AND2), &[Tv(673), Tv(701)]),
];

static LEVEL_7: [((usize, bool, CellType), &[GateInput]); 26] = [
    ((221, false, INV), &[Arg(1, 5)]),
    ((229, false, INV), &[Arg(0, 4)]),
    ((237, false, INV), &[Arg(0, 12)]),
    ((258, false, INV), &[Arg(2, 16)]),
    ((273, false, INV), &[Arg(3, 13)]),
    ((283, false, NAND2), &[Arg(0, 12), Tv(245)]),
    ((296, false, NAND2), &[Tv(284), Tv(295)]),
    ((329, false, NAND2), &[Tv(287), Tv(327)]),
    ((355, false, NAND2), &[Tv(220), Arg(0, 4)]),
    ((369, false, NAND2), &[Tv(356), Tv(368)]),
    ((397, false, NAND2), &[Tv(381), Tv(396)]),
    ((399, false, AND2), &[Tv(356), Tv(398)]),
    ((607, false, XNOR2), &[Arg(1, 11), Arg(2, 60)]),
    ((625, false, XNOR2), &[Arg(1, 7), Arg(2, 56)]),
    ((626, false, AND2), &[Tv(608), Tv(620)]),
    ((628, false, XNOR2), &[Arg(1, 13), Arg(2, 62)]),
    ((631, false, AND2), &[Tv(617), Tv(623)]),
    ((638, false, AND2), &[Tv(636), Tv(637)]),
    ((642, false, AND2), &[Tv(615), Tv(641)]),
    ((648, false, AND2), &[Tv(644), Tv(647)]),
    ((678, false, AND2), &[Tv(676), Tv(677)]),
    ((681, false, AND2), &[Tv(679), Tv(680)]),
    ((686, false, AND2), &[Tv(658), Tv(685)]),
    ((692, false, AND2), &[Tv(688), Tv(691)]),
    ((697, false, AND2), &[Tv(662), Tv(696)]),
    ((703, false, AND2), &[Tv(700), Tv(702)]),
];

static LEVEL_8: [((usize, bool, CellType), &[GateInput]); 40] = [
    ((279, false, XNOR2), &[Arg(0, 13), Arg(1, 13)]),
    ((282, false, NAND2), &[Tv(237), Arg(1, 12)]),
    ((297, false, NAND2), &[Tv(283), Tv(296)]),
    ((304, false, XNOR2), &[Arg(1, 15), Arg(0, 15)]),
    ((305, false, XNOR2), &[Arg(0, 10), Arg(1, 10)]),
    ((306, false, XNOR2), &[Arg(0, 12), Arg(1, 12)]),
    ((308, false, XNOR2), &[Arg(0, 14), Arg(1, 14)]),
    ((310, false, XNOR2), &[Arg(0, 8), Arg(1, 8)]),
    ((312, false, XNOR2), &[Arg(0, 11), Arg(1, 11)]),
    ((330, false, NAND2), &[Tv(284), Tv(329)]),
    ((350, false, XNOR2), &[Arg(1, 7), Arg(0, 7)]),
    ((354, false, NAND2), &[Arg(1, 4), Tv(229)]),
    ((370, false, NAND2), &[Tv(355), Tv(369)]),
    ((375, false, XNOR2), &[Arg(1, 5), Arg(0, 5)]),
    ((377, false, XNOR2), &[Arg(0, 0), Arg(1, 0)]),
    ((382, false, XNOR2), &[Arg(1, 4), Arg(0, 4)]),
    ((384, false, XNOR2), &[Arg(1, 6), Arg(0, 6)]),
    ((400, false, AND2), &[Tv(397), Tv(399)]),
    ((537, false, XNOR2), &[Arg(1, 4), Arg(3, 12)]),
    ((538, false, XNOR2), &[Arg(1, 7), Arg(3, 15)]),
    ((539, false, XNOR2), &[Arg(1, 12), Arg(3, 20)]),
    ((541, false, XNOR2), &[Arg(1, 6), Arg(3, 14)]),
    ((542, false, XNOR2), &[Arg(1, 3), Arg(3, 11)]),
    ((543, false, XNOR2), &[Arg(1, 11), Arg(3, 19)]),
    ((544, false, XNOR2), &[Arg(1, 15), Arg(3, 23)]),
    ((545, false, XNOR2), &[Arg(1, 14), Arg(3, 22)]),
    ((547, false, XNOR2), &[Arg(1, 13), Arg(3, 21)]),
    ((548, false, NAND2), &[Tv(221), Arg(3, 13)]),
    ((549, false, NAND2), &[Arg(1, 5), Tv(273)]),
    ((550, false, XNOR2), &[Arg(1, 8), Arg(3, 16)]),
    ((559, false, XNOR2), &[Arg(1, 2), Arg(3, 10)]),
    ((561, false, XNOR2), &[Arg(1, 9), Arg(3, 17)]),
    ((627, false, AND2), &[Tv(625), Tv(626)]),
    ((629, false, AND2), &[Tv(607), Tv(628)]),
    ((639, false, AND2), &[Tv(631), Tv(638)]),
    ((649, false, AND2), &[Tv(642), Tv(648)]),
    ((668, false, NAND2), &[Arg(1, 8), Tv(258)]),
    ((682, false, AND2), &[Tv(678), Tv(681)]),
    ((693, false, AND2), &[Tv(686), Tv(692)]),
    ((704, false, AND2), &[Tv(697), Tv(703)]),
];

static LEVEL_9: [((usize, bool, CellType), &[GateInput]); 33] = [
    ((230, false, INV), &[Arg(0, 5)]),
    ((231, false, INV), &[Arg(0, 6)]),
    ((232, false, INV), &[Arg(0, 7)]),
    ((238, false, INV), &[Arg(0, 13)]),
    ((239, false, INV), &[Arg(0, 14)]),
    ((240, false, INV), &[Arg(0, 15)]),
    ((274, false, INV), &[Arg(3, 53)]),
    ((276, false, INV), &[Arg(3, 93)]),
    ((277, false, NAND2), &[Arg(0, 13), Tv(246)]),
    ((298, false, NAND2), &[Tv(282), Tv(297)]),
    ((313, false, AND2), &[Tv(302), Tv(310)]),
    ((314, false, AND2), &[Tv(305), Tv(308)]),
    ((316, false, AND2), &[Tv(279), Tv(306)]),
    ((317, false, AND2), &[Tv(304), Tv(312)]),
    ((332, false, NAND2), &[Tv(285), Tv(330)]),
    ((353, false, NAND2), &[Tv(221), Arg(0, 5)]),
    ((371, false, NAND2), &[Tv(354), Tv(370)]),
    ((385, false, AND2), &[Tv(377), Tv(378)]),
    ((386, false, AND2), &[Tv(375), Tv(382)]),
    ((388, false, AND2), &[Tv(350), Tv(384)]),
    ((402, false, NAND2), &[Tv(354), Tv(400)]),
    ((546, false, XNOR2), &[Arg(1, 1), Arg(3, 9)]),
    ((552, false, AND2), &[Tv(541), Tv(542)]),
    ((553, false, AND2), &[Tv(537), Tv(539)]),
    ((555, false, AND2), &[Tv(538), Tv(547)]),
    ((556, false, AND2), &[Tv(543), Tv(545)]),
    ((560, false, AND2), &[Tv(548), Tv(559)]),
    ((562, false, AND2), &[Tv(550), Tv(561)]),
    ((564, false, AND2), &[Tv(544), Tv(549)]),
    ((630, false, AND2), &[Tv(627), Tv(629)]),
    ((650, false, AND2), &[Tv(639), Tv(649)]),
    ((683, false, AND2), &[Tv(668), Tv(682)]),
    ((705, false, AND2), &[Tv(693), Tv(704)]),
];

static LEVEL_10: [((usize, bool, CellType), &[GateInput]); 44] = [
    ((278, false, NAND2), &[Tv(238), Arg(1, 13)]),
    ((299, false, NAND2), &[Tv(277), Tv(298)]),
    ((303, false, NAND2), &[Arg(1, 15), Tv(240)]),
    ((307, false, NAND2), &[Tv(239), Arg(1, 14)]),
    ((315, false, AND2), &[Tv(313), Tv(314)]),
    ((318, false, AND2), &[Tv(316), Tv(317)]),
    ((333, false, NAND2), &[Tv(282), Tv(332)]),
    ((349, false, NAND2), &[Arg(1, 7), Tv(232)]),
    ((352, false, NAND2), &[Arg(1, 5), Tv(230)]),
    ((372, false, NAND2), &[Tv(353), Tv(371)]),
    ((383, false, NAND2), &[Arg(1, 6), Tv(231)]),
    ((387, false, AND2), &[Tv(385), Tv(386)]),
    ((389, false, AND2), &[Tv(381), Tv(388)]),
    ((403, false, AND2), &[Tv(355), Tv(402)]),
    ((469, false, XNOR2), &[Arg(1, 15), Arg(3, 103)]),
    ((470, false, NAND2), &[Arg(1, 5), Tv(276)]),
    ((471, false, XNOR2), &[Arg(1, 12), Arg(3, 100)]),
    ((473, false, XNOR2), &[Arg(1, 6), Arg(3, 94)]),
    ((475, false, XNOR2), &[Arg(1, 13), Arg(3, 101)]),
    ((477, false, NAND2), &[Tv(221), Arg(3, 93)]),
    ((478, false, XNOR2), &[Arg(1, 8), Arg(3, 96)]),
    ((479, false, XNOR2), &[Arg(1, 4), Arg(3, 92)]),
    ((482, false, XNOR2), &[Arg(1, 3), Arg(3, 91)]),
    ((484, false, XNOR2), &[Arg(1, 7), Arg(3, 95)]),
    ((492, false, XNOR2), &[Arg(1, 2), Arg(3, 90)]),
    ((494, false, XNOR2), &[Arg(1, 9), Arg(3, 97)]),
    ((502, false, XNOR2), &[Arg(1, 15), Arg(3, 63)]),
    ((503, false, NAND2), &[Tv(221), Arg(3, 53)]),
    ((504, false, NAND2), &[Arg(1, 5), Tv(274)]),
    ((505, false, XNOR2), &[Arg(1, 12), Arg(3, 60)]),
    ((507, false, XNOR2), &[Arg(1, 6), Arg(3, 54)]),
    ((509, false, XNOR2), &[Arg(1, 13), Arg(3, 61)]),
    ((511, false, XNOR2), &[Arg(1, 2), Arg(3, 50)]),
    ((512, false, XNOR2), &[Arg(1, 8), Arg(3, 56)]),
    ((513, false, XNOR2), &[Arg(1, 4), Arg(3, 52)]),
    ((516, false, XNOR2), &[Arg(1, 3), Arg(3, 51)]),
    ((518, false, XNOR2), &[Arg(1, 7), Arg(3, 55)]),
    ((527, false, XNOR2), &[Arg(1, 9), Arg(3, 57)]),
    ((554, false, AND2), &[Tv(552), Tv(553)]),
    ((557, false, AND2), &[Tv(555), Tv(556)]),
    ((563, false, AND2), &[Tv(560), Tv(562)]),
    ((565, false, AND2), &[Tv(546), Tv(564)]),
    ((651, false, AND2), &[Tv(630), Tv(650)]),
    ((706, false, NAND2), &[Tv(683), Tv(705)]),
];

static LEVEL_11: [((usize, bool, CellType), &[GateInput]); 31] = [
    ((281, false, NAND2), &[Arg(0, 14), Tv(247)]),
    ((300, false, NAND2), &[Tv(278), Tv(299)]),
    ((319, false, NAND2), &[Tv(315), Tv(318)]),
    ((320, false, AND2), &[Tv(303), Tv(307)]),
    ((335, false, NAND2), &[Tv(283), Tv(333)]),
    ((351, false, NAND2), &[Tv(222), Arg(0, 6)]),
    ((373, false, NAND2), &[Tv(352), Tv(372)]),
    ((390, false, NAND2), &[Tv(387), Tv(389)]),
    ((391, false, AND2), &[Tv(349), Tv(383)]),
    ((404, false, NAND2), &[Tv(353), Tv(403)]),
    ((476, false, XNOR2), &[Arg(1, 1), Arg(3, 89)]),
    ((480, false, XNOR2), &[Arg(1, 14), Arg(3, 102)]),
    ((483, false, AND2), &[Tv(473), Tv(482)]),
    ((485, false, AND2), &[Tv(471), Tv(479)]),
    ((487, false, AND2), &[Tv(475), Tv(484)]),
    ((493, false, AND2), &[Tv(477), Tv(492)]),
    ((495, false, AND2), &[Tv(478), Tv(494)]),
    ((497, false, AND2), &[Tv(469), Tv(470)]),
    ((510, false, XNOR2), &[Arg(1, 1), Arg(3, 49)]),
    ((514, false, XNOR2), &[Arg(1, 14), Arg(3, 62)]),
    ((517, false, AND2), &[Tv(507), Tv(516)]),
    ((519, false, AND2), &[Tv(505), Tv(513)]),
    ((521, false, AND2), &[Tv(509), Tv(518)]),
    ((526, false, AND2), &[Tv(503), Tv(511)]),
    ((528, false, AND2), &[Tv(512), Tv(527)]),
    ((530, false, AND2), &[Tv(502), Tv(504)]),
    ((536, false, XNOR2), &[Arg(1, 10), Arg(3, 18)]),
    ((540, false, XNOR2), &[Arg(1, 0), Arg(3, 8)]),
    ((558, false, AND2), &[Tv(554), Tv(557)]),
    ((566, false, AND2), &[Tv(563), Tv(565)]),
    ((711, false, NOR2), &[Tv(651), Tv(706)]),
];

static LEVEL_12: [((usize, bool, CellType), &[GateInput]); 24] = [
    ((223, false, INV), &[Arg(1, 7)]),
    ((275, false, INV), &[Arg(3, 133)]),
    ((301, false, NAND2), &[Tv(281), Tv(300)]),
    ((321, false, AND2), &[Tv(319), Tv(320)]),
    ((340, false, NAND2), &[Tv(278), Tv(335)]),
    ((374, false, NAND2), &[Tv(351), Tv(373)]),
    ((392, false, AND2), &[Tv(390), Tv(391)]),
    ((405, false, NAND2), &[Tv(352), Tv(404)]),
    ((474, false, XNOR2), &[Arg(1, 0), Arg(3, 88)]),
    ((481, false, XNOR2), &[Arg(1, 10), Arg(3, 98)]),
    ((486, false, AND2), &[Tv(483), Tv(485)]),
    ((488, false, AND2), &[Tv(480), Tv(487)]),
    ((496, false, AND2), &[Tv(493), Tv(495)]),
    ((498, false, AND2), &[Tv(476), Tv(497)]),
    ((508, false, XNOR2), &[Arg(1, 0), Arg(3, 48)]),
    ((515, false, XNOR2), &[Arg(1, 10), Arg(3, 58)]),
    ((520, false, AND2), &[Tv(517), Tv(519)]),
    ((522, false, AND2), &[Tv(514), Tv(521)]),
    ((529, false, AND2), &[Tv(526), Tv(528)]),
    ((531, false, AND2), &[Tv(510), Tv(530)]),
    ((551, false, AND2), &[Tv(536), Tv(540)]),
    ((567, false, AND2), &[Tv(558), Tv(566)]),
    ((179, false, NAND2), &[Arg(2, 39), Tv(711)]),
    ((180, false, NAND2), &[Arg(2, 80), Tv(651)]),
];

static LEVEL_13: [((usize, bool, CellType), &[GateInput]); 30] = [
    ((209, false, INV), &[Arg(3, 39)]),
    ((280, false, NAND2), &[Tv(224), Arg(0, 15)]),
    ((322, false, NAND2), &[Tv(301), Tv(321)]),
    ((342, false, NAND2), &[Tv(277), Tv(340)]),
    ((348, false, NAND2), &[Tv(223), Arg(0, 7)]),
    ((393, false, NAND2), &[Tv(374), Tv(392)]),
    ((406, false, NAND2), &[Tv(351), Tv(405)]),
    ((448, false, NAND2), &[Tv(358), Tv(395)]),
    ((472, false, XNOR2), &[Arg(1, 11), Arg(3, 99)]),
    ((489, false, AND2), &[Tv(486), Tv(488)]),
    ((490, false, AND2), &[Tv(474), Tv(481)]),
    ((499, false, AND2), &[Tv(496), Tv(498)]),
    ((506, false, XNOR2), &[Arg(1, 11), Arg(3, 59)]),
    ((523, false, AND2), &[Tv(520), Tv(522)]),
    ((524, false, AND2), &[Tv(508), Tv(515)]),
    ((532, false, AND2), &[Tv(529), Tv(531)]),
    ((568, false, NAND2), &[Tv(551), Tv(567)]),
    ((569, false, XNOR2), &[Arg(1, 15), Arg(3, 143)]),
    ((570, false, NAND2), &[Arg(1, 5), Tv(275)]),
    ((571, false, XNOR2), &[Arg(1, 12), Arg(3, 140)]),
    ((573, false, XNOR2), &[Arg(1, 6), Arg(3, 134)]),
    ((575, false, XNOR2), &[Arg(1, 13), Arg(3, 141)]),
    ((577, false, NAND2), &[Tv(221), Arg(3, 133)]),
    ((578, false, XNOR2), &[Arg(1, 8), Arg(3, 136)]),
    ((579, false, XNOR2), &[Arg(1, 4), Arg(3, 132)]),
    ((582, false, XNOR2), &[Arg(1, 3), Arg(3, 131)]),
    ((584, false, XNOR2), &[Arg(1, 7), Arg(3, 135)]),
    ((592, false, XNOR2), &[Arg(1, 2), Arg(3, 130)]),
    ((594, false, XNOR2), &[Arg(1, 9), Arg(3, 137)]),
    ((181, false, NAND2), &[Tv(179), Tv(180)]),
];

static LEVEL_14: [((usize, bool, CellType), &[GateInput]); 25] = [
    ((323, false, AND2), &[Tv(280), Tv(322)]),
    ((328, false, AND2), &[Tv(287), Tv(327)]),
    ((331, false, AND2), &[Tv(285), Tv(330)]),
    ((341, false, AND2), &[Tv(277), Tv(340)]),
    ((343, false, NAND2), &[Tv(307), Tv(342)]),
    ((344, false, AND2), &[Tv(280), Tv(281)]),
    ((407, false, NAND2), &[Tv(383), Tv(406)]),
    ((413, false, AND2), &[Tv(348), Tv(393)]),
    ((449, false, AND2), &[Tv(360), Tv(448)]),
    ((458, false, XNOR2), &[Tv(376), Tv(378)]),
    ((461, false, XOR2), &[Tv(302), Tv(309)]),
    ((491, false, AND2), &[Tv(489), Tv(490)]),
    ((500, false, AND2), &[Tv(472), Tv(499)]),
    ((525, false, AND2), &[Tv(523), Tv(524)]),
    ((533, false, AND2), &[Tv(506), Tv(532)]),
    ((576, false, XNOR2), &[Arg(1, 1), Arg(3, 129)]),
    ((580, false, XNOR2), &[Arg(1, 14), Arg(3, 142)]),
    ((583, false, AND2), &[Tv(573), Tv(582)]),
    ((585, false, AND2), &[Tv(571), Tv(579)]),
    ((587, false, AND2), &[Tv(575), Tv(584)]),
    ((593, false, AND2), &[Tv(577), Tv(592)]),
    ((595, false, AND2), &[Tv(578), Tv(594)]),
    ((597, false, AND2), &[Tv(569), Tv(570)]),
    ((182, false, NAND2), &[Tv(568), Tv(181)]),
    ((183, false, OR2), &[Tv(209), Tv(568)]),
];

static LEVEL_15: [((usize, bool, CellType), &[GateInput]); 55] = [
    ((193, false, INV), &[Arg(3, 40)]),
    ((194, false, INV), &[Arg(3, 41)]),
    ((195, false, INV), &[Arg(3, 42)]),
    ((196, false, INV), &[Arg(3, 43)]),
    ((197, false, INV), &[Arg(3, 44)]),
    ((198, false, INV), &[Arg(3, 45)]),
    ((199, false, INV), &[Arg(3, 46)]),
    ((200, false, INV), &[Arg(3, 47)]),
    ((201, false, INV), &[Arg(3, 64)]),
    ((202, false, INV), &[Arg(3, 65)]),
    ((203, false, INV), &[Arg(3, 66)]),
    ((204, false, INV), &[Arg(3, 67)]),
    ((205, false, INV), &[Arg(3, 68)]),
    ((206, false, INV), &[Arg(3, 69)]),
    ((207, false, INV), &[Arg(3, 70)]),
    ((208, false, INV), &[Arg(3, 71)]),
    ((210, false, INV), &[Arg(3, 72)]),
    ((211, false, INV), &[Arg(3, 73)]),
    ((212, false, INV), &[Arg(3, 74)]),
    ((213, false, INV), &[Arg(3, 75)]),
    ((214, false, INV), &[Arg(3, 76)]),
    ((215, false, INV), &[Arg(3, 77)]),
    ((216, false, INV), &[Arg(3, 78)]),
    ((217, false, INV), &[Arg(3, 79)]),
    ((311, false, XOR2), &[Arg(0, 8), Arg(1, 8)]),
    ((326, false, INV), &[Tv(325)]),
    ((334, false, AND2), &[Tv(283), Tv(333)]),
    ((345, false, NAND2), &[Tv(343), Tv(344)]),
    ((401, false, INV), &[Tv(400)]),
    ((408, false, NAND2), &[Tv(348), Tv(407)]),
    ((424, false, NAND2), &[Tv(403), Tv(413)]),
    ((425, false, OR2), &[Tv(371), Tv(413)]),
    ((428, false, NAND2), &[Tv(323), Tv(328)]),
    ((429, false, OR2), &[Tv(294), Tv(323)]),
    ((433, false, NAND2), &[Tv(323), Tv(331)]),
    ((434, false, OR2), &[Tv(296), Tv(323)]),
    ((437, false, OR2), &[Tv(365), Tv(413)]),
    ((438, false, NAND2), &[Tv(396), Tv(413)]),
    ((443, false, NAND2), &[Tv(405), Tv(413)]),
    ((444, false, OR2), &[Tv(373), Tv(413)]),
    ((447, false, OR2), &[Tv(367), Tv(413)]),
    ((450, false, NAND2), &[Tv(413), Tv(449)]),
    ((454, false, NAND2), &[Tv(323), Tv(341)]),
    ((455, false, OR2), &[Tv(300), Tv(323)]),
    ((459, false, XNOR2), &[Tv(413), Tv(458)]),
    ((462, false, XNOR2), &[Tv(323), Tv(461)]),
    ((501, false, NAND2), &[Tv(491), Tv(500)]),
    ((534, false, NAND2), &[Tv(525), Tv(533)]),
    ((574, false, XNOR2), &[Arg(1, 0), Arg(3, 128)]),
    ((581, false, XNOR2), &[Arg(1, 10), Arg(3, 138)]),
    ((586, false, AND2), &[Tv(583), Tv(585)]),
    ((588, false, AND2), &[Tv(580), Tv(587)]),
    ((596, false, AND2), &[Tv(593), Tv(595)]),
    ((598, false, AND2), &[Tv(576), Tv(597)]),
    ((184, false, NAND2), &[Tv(182), Tv(183)]),
];

static LEVEL_16: [((usize, bool, CellType), &[GateInput]); 70] = [
    ((336, false, NAND2), &[Tv(323), Tv(334)]),
    ((337, false, OR2), &[Tv(298), Tv(323)]),
    ((346, false, AND2), &[Tv(322), Tv(345)]),
    ((409, false, AND2), &[Tv(393), Tv(408)]),
    ((414, false, OR2), &[Tv(369), Tv(413)]),
    ((415, false, NAND2), &[Tv(401), Tv(413)]),
    ((418, false, OR2), &[Tv(292), Tv(323)]),
    ((419, false, NAND2), &[Tv(323), Tv(326)]),
    ((426, false, AND2), &[Tv(424), Tv(425)]),
    ((430, false, AND2), &[Tv(428), Tv(429)]),
    ((435, false, NAND2), &[Tv(433), Tv(434)]),
    ((439, false, NAND2), &[Tv(437), Tv(438)]),
    ((445, false, AND2), &[Tv(443), Tv(444)]),
    ((451, false, AND2), &[Tv(447), Tv(450)]),
    ((456, false, AND2), &[Tv(454), Tv(455)]),
    ((460, false, OR2), &[Tv(377), Tv(459)]),
    ((463, false, NAND2), &[Tv(311), Tv(462)]),
    ((535, false, AND2), &[Tv(501), Tv(534)]),
    ((572, false, XNOR2), &[Arg(1, 11), Arg(3, 139)]),
    ((589, false, AND2), &[Tv(586), Tv(588)]),
    ((590, false, AND2), &[Tv(574), Tv(581)]),
    ((599, false, AND2), &[Tv(596), Tv(598)]),
    ((710, false, AND2), &[Tv(193), Tv(501)]),
    ((713, false, NAND2), &[Arg(2, 41), Tv(651)]),
    ((726, false, AND2), &[Tv(194), Tv(501)]),
    ((728, false, NAND2), &[Arg(2, 42), Tv(651)]),
    ((741, false, AND2), &[Tv(195), Tv(501)]),
    ((743, false, NAND2), &[Arg(2, 43), Tv(651)]),
    ((756, false, AND2), &[Tv(196), Tv(501)]),
    ((758, false, NAND2), &[Arg(2, 44), Tv(651)]),
    ((771, false, AND2), &[Tv(197), Tv(501)]),
    ((773, false, NAND2), &[Arg(2, 45), Tv(651)]),
    ((786, false, AND2), &[Tv(198), Tv(501)]),
    ((788, false, NAND2), &[Arg(2, 46), Tv(651)]),
    ((801, false, AND2), &[Tv(199), Tv(501)]),
    ((803, false, NAND2), &[Arg(2, 47), Tv(651)]),
    ((816, false, AND2), &[Tv(200), Tv(501)]),
    ((818, false, NAND2), &[Arg(2, 48), Tv(651)]),
    ((831, false, AND2), &[Tv(201), Tv(501)]),
    ((833, false, NAND2), &[Arg(2, 65), Tv(651)]),
    ((846, false, AND2), &[Tv(202), Tv(501)]),
    ((848, false, NAND2), &[Arg(2, 66), Tv(651)]),
    ((861, false, AND2), &[Tv(203), Tv(501)]),
    ((863, false, NAND2), &[Arg(2, 67), Tv(651)]),
    ((876, false, AND2), &[Tv(204), Tv(501)]),
    ((1, false, NAND2), &[Arg(2, 68), Tv(651)]),
    ((14, false, AND2), &[Tv(205), Tv(501)]),
    ((16, false, NAND2), &[Arg(2, 69), Tv(651)]),
    ((29, false, AND2), &[Tv(206), Tv(501)]),
    ((31, false, NAND2), &[Arg(2, 70), Tv(651)]),
    ((44, false, AND2), &[Tv(207), Tv(501)]),
    ((46, false, NAND2), &[Arg(2, 71), Tv(651)]),
    ((59, false, AND2), &[Tv(208), Tv(501)]),
    ((61, false, NAND2), &[Arg(2, 72), Tv(651)]),
    ((74, false, AND2), &[Tv(210), Tv(501)]),
    ((76, false, NAND2), &[Arg(2, 73), Tv(651)]),
    ((89, false, AND2), &[Tv(211), Tv(501)]),
    ((91, false, NAND2), &[Arg(2, 74), Tv(651)]),
    ((104, false, AND2), &[Tv(212), Tv(501)]),
    ((106, false, NAND2), &[Arg(2, 75), Tv(651)]),
    ((119, false, AND2), &[Tv(213), Tv(501)]),
    ((121, false, NAND2), &[Arg(2, 76), Tv(651)]),
    ((134, false, AND2), &[Tv(214), Tv(501)]),
    ((136, false, NAND2), &[Arg(2, 77), Tv(651)]),
    ((149, false, AND2), &[Tv(215), Tv(501)]),
    ((151, false, NAND2), &[Arg(2, 78), Tv(651)]),
    ((164, false, AND2), &[Tv(216), Tv(501)]),
    ((166, false, NAND2), &[Arg(2, 79), Tv(651)]),
    ((178, false, OR2), &[Tv(217), Tv(534)]),
    ((185, false, NAND2), &[Tv(534), Tv(184)]),
];

static LEVEL_17: [((usize, bool, CellType), &[GateInput]); 132] = [
    ((218, false, INV), &[Arg(3, 119)]),
    ((338, false, AND2), &[Tv(336), Tv(337)]),
    ((347, false, OR2), &[Tv(304), Tv(346)]),
    ((410, false, OR2), &[Tv(350), Tv(409)]),
    ((416, false, NAND2), &[Tv(414), Tv(415)]),
    ((420, false, NAND2), &[Tv(418), Tv(419)]),
    ((427, false, XNOR2), &[Tv(375), Tv(426)]),
    ((431, false, XNOR2), &[Tv(312), Tv(430)]),
    ((436, false, XNOR2), &[Tv(306), Tv(435)]),
    ((440, false, XNOR2), &[Tv(380), Tv(439)]),
    ((446, false, XNOR2), &[Tv(384), Tv(445)]),
    ((452, false, XNOR2), &[Tv(379), Tv(451)]),
    ((457, false, XNOR2), &[Tv(308), Tv(456)]),
    ((464, false, NAND2), &[Tv(460), Tv(463)]),
    ((591, false, AND2), &[Tv(589), Tv(590)]),
    ((600, false, AND2), &[Tv(572), Tv(599)]),
    ((709, false, OR2), &[Arg(3, 80), Tv(501)]),
    ((712, false, NAND2), &[Arg(2, 0), Tv(711)]),
    ((714, false, AND2), &[Tv(568), Tv(713)]),
    ((716, false, OR2), &[Arg(3, 0), Tv(568)]),
    ((719, false, NOR2), &[Tv(535), Tv(710)]),
    ((725, false, OR2), &[Arg(3, 81), Tv(501)]),
    ((727, false, NAND2), &[Arg(2, 1), Tv(711)]),
    ((729, false, AND2), &[Tv(568), Tv(728)]),
    ((731, false, OR2), &[Arg(3, 1), Tv(568)]),
    ((734, false, NOR2), &[Tv(535), Tv(726)]),
    ((740, false, OR2), &[Arg(3, 82), Tv(501)]),
    ((742, false, NAND2), &[Arg(2, 2), Tv(711)]),
    ((744, false, AND2), &[Tv(568), Tv(743)]),
    ((746, false, OR2), &[Arg(3, 2), Tv(568)]),
    ((749, false, NOR2), &[Tv(535), Tv(741)]),
    ((755, false, OR2), &[Arg(3, 83), Tv(501)]),
    ((757, false, NAND2), &[Arg(2, 3), Tv(711)]),
    ((759, false, AND2), &[Tv(568), Tv(758)]),
    ((761, false, OR2), &[Arg(3, 3), Tv(568)]),
    ((764, false, NOR2), &[Tv(535), Tv(756)]),
    ((770, false, OR2), &[Arg(3, 84), Tv(501)]),
    ((772, false, NAND2), &[Arg(2, 4), Tv(711)]),
    ((774, false, AND2), &[Tv(568), Tv(773)]),
    ((776, false, OR2), &[Arg(3, 4), Tv(568)]),
    ((779, false, NOR2), &[Tv(535), Tv(771)]),
    ((785, false, OR2), &[Arg(3, 85), Tv(501)]),
    ((787, false, NAND2), &[Arg(2, 5), Tv(711)]),
    ((789, false, AND2), &[Tv(568), Tv(788)]),
    ((791, false, OR2), &[Arg(3, 5), Tv(568)]),
    ((794, false, NOR2), &[Tv(535), Tv(786)]),
    ((800, false, OR2), &[Arg(3, 86), Tv(501)]),
    ((802, false, NAND2), &[Arg(2, 6), Tv(711)]),
    ((804, false, AND2), &[Tv(568), Tv(803)]),
    ((806, false, OR2), &[Arg(3, 6), Tv(568)]),
    ((809, false, NOR2), &[Tv(535), Tv(801)]),
    ((815, false, OR2), &[Arg(3, 87), Tv(501)]),
    ((817, false, NAND2), &[Arg(2, 7), Tv(711)]),
    ((819, false, AND2), &[Tv(568), Tv(818)]),
    ((821, false, OR2), &[Arg(3, 7), Tv(568)]),
    ((824, false, NOR2), &[Tv(535), Tv(816)]),
    ((830, false, OR2), &[Arg(3, 104), Tv(501)]),
    ((832, false, NAND2), &[Arg(2, 24), Tv(711)]),
    ((834, false, AND2), &[Tv(568), Tv(833)]),
    ((836, false, OR2), &[Arg(3, 24), Tv(568)]),
    ((839, false, NOR2), &[Tv(535), Tv(831)]),
    ((845, false, OR2), &[Arg(3, 105), Tv(501)]),
    ((847, false, NAND2), &[Arg(2, 25), Tv(711)]),
    ((849, false, AND2), &[Tv(568), Tv(848)]),
    ((851, false, OR2), &[Arg(3, 25), Tv(568)]),
    ((854, false, NOR2), &[Tv(535), Tv(846)]),
    ((860, false, OR2), &[Arg(3, 106), Tv(501)]),
    ((862, false, NAND2), &[Arg(2, 26), Tv(711)]),
    ((864, false, AND2), &[Tv(568), Tv(863)]),
    ((866, false, OR2), &[Arg(3, 26), Tv(568)]),
    ((869, false, NOR2), &[Tv(535), Tv(861)]),
    ((875, false, OR2), &[Arg(3, 107), Tv(501)]),
    ((0, false, NAND2), &[Arg(2, 27), Tv(711)]),
    ((2, false, AND2), &[Tv(568), Tv(1)]),
    ((4, false, OR2), &[Arg(3, 27), Tv(568)]),
    ((7, false, NOR2), &[Tv(535), Tv(876)]),
    ((13, false, OR2), &[Arg(3, 108), Tv(501)]),
    ((15, false, NAND2), &[Arg(2, 28), Tv(711)]),
    ((17, false, AND2), &[Tv(568), Tv(16)]),
    ((19, false, OR2), &[Arg(3, 28), Tv(568)]),
    ((22, false, NOR2), &[Tv(535), Tv(14)]),
    ((28, false, OR2), &[Arg(3, 109), Tv(501)]),
    ((30, false, NAND2), &[Arg(2, 29), Tv(711)]),
    ((32, false, AND2), &[Tv(568), Tv(31)]),
    ((34, false, OR2), &[Arg(3, 29), Tv(568)]),
    ((37, false, NOR2), &[Tv(535), Tv(29)]),
    ((43, false, OR2), &[Arg(3, 110), Tv(501)]),
    ((45, false, NAND2), &[Arg(2, 30), Tv(711)]),
    ((47, false, AND2), &[Tv(568), Tv(46)]),
    ((49, false, OR2), &[Arg(3, 30), Tv(568)]),
    ((52, false, NOR2), &[Tv(535), Tv(44)]),
    ((58, false, OR2), &[Arg(3, 111), Tv(501)]),
    ((60, false, NAND2), &[Arg(2, 31), Tv(711)]),
    ((62, false, AND2), &[Tv(568), Tv(61)]),
    ((64, false, OR2), &[Arg(3, 31), Tv(568)]),
    ((67, false, NOR2), &[Tv(535), Tv(59)]),
    ((73, false, OR2), &[Arg(3, 112), Tv(501)]),
    ((75, false, NAND2), &[Arg(2, 32), Tv(711)]),
    ((77, false, AND2), &[Tv(568), Tv(76)]),
    ((79, false, OR2), &[Arg(3, 32), Tv(568)]),
    ((82, false, NOR2), &[Tv(535), Tv(74)]),
    ((88, false, OR2), &[Arg(3, 113), Tv(501)]),
    ((90, false, NAND2), &[Arg(2, 33), Tv(711)]),
    ((92, false, AND2), &[Tv(568), Tv(91)]),
    ((94, false, OR2), &[Arg(3, 33), Tv(568)]),
    ((97, false, NOR2), &[Tv(535), Tv(89)]),
    ((103, false, OR2), &[Arg(3, 114), Tv(501)]),
    ((105, false, NAND2), &[Arg(2, 34), Tv(711)]),
    ((107, false, AND2), &[Tv(568), Tv(106)]),
    ((109, false, OR2), &[Arg(3, 34), Tv(568)]),
    ((112, false, NOR2), &[Tv(535), Tv(104)]),
    ((118, false, OR2), &[Arg(3, 115), Tv(501)]),
    ((120, false, NAND2), &[Arg(2, 35), Tv(711)]),
    ((122, false, AND2), &[Tv(568), Tv(121)]),
    ((124, false, OR2), &[Arg(3, 35), Tv(568)]),
    ((127, false, NOR2), &[Tv(535), Tv(119)]),
    ((133, false, OR2), &[Arg(3, 116), Tv(501)]),
    ((135, false, NAND2), &[Arg(2, 36), Tv(711)]),
    ((137, false, AND2), &[Tv(568), Tv(136)]),
    ((139, false, OR2), &[Arg(3, 36), Tv(568)]),
    ((142, false, NOR2), &[Tv(535), Tv(134)]),
    ((148, false, OR2), &[Arg(3, 117), Tv(501)]),
    ((150, false, NAND2), &[Arg(2, 37), Tv(711)]),
    ((152, false, AND2), &[Tv(568), Tv(151)]),
    ((154, false, OR2), &[Arg(3, 37), Tv(568)]),
    ((157, false, NOR2), &[Tv(535), Tv(149)]),
    ((163, false, OR2), &[Arg(3, 118), Tv(501)]),
    ((165, false, NAND2), &[Arg(2, 38), Tv(711)]),
    ((167, false, AND2), &[Tv(568), Tv(166)]),
    ((169, false, OR2), &[Arg(3, 38), Tv(568)]),
    ((172, false, NOR2), &[Tv(535), Tv(164)]),
    ((186, false, NAND2), &[Tv(178), Tv(185)]),
];

static LEVEL_18: [((usize, bool, CellType), &[GateInput]); 80] = [
    ((339, false, XNOR2), &[Tv(279), Tv(338)]),
    ((411, false, NAND2), &[Tv(347), Tv(410)]),
    ((417, false, XNOR2), &[Tv(382), Tv(416)]),
    ((421, false, XNOR2), &[Tv(305), Tv(420)]),
    ((432, false, NOR2), &[Tv(427), Tv(431)]),
    ((441, false, AND2), &[Tv(436), Tv(440)]),
    ((453, false, NOR2), &[Tv(446), Tv(452)]),
    ((465, false, NOR2), &[Tv(457), Tv(464)]),
    ((601, false, NAND2), &[Tv(591), Tv(600)]),
    ((715, false, NAND2), &[Tv(712), Tv(714)]),
    ((717, false, AND2), &[Tv(535), Tv(716)]),
    ((720, false, NAND2), &[Tv(709), Tv(719)]),
    ((730, false, NAND2), &[Tv(727), Tv(729)]),
    ((732, false, AND2), &[Tv(535), Tv(731)]),
    ((735, false, NAND2), &[Tv(725), Tv(734)]),
    ((745, false, NAND2), &[Tv(742), Tv(744)]),
    ((747, false, AND2), &[Tv(535), Tv(746)]),
    ((750, false, NAND2), &[Tv(740), Tv(749)]),
    ((760, false, NAND2), &[Tv(757), Tv(759)]),
    ((762, false, AND2), &[Tv(535), Tv(761)]),
    ((765, false, NAND2), &[Tv(755), Tv(764)]),
    ((775, false, NAND2), &[Tv(772), Tv(774)]),
    ((777, false, AND2), &[Tv(535), Tv(776)]),
    ((780, false, NAND2), &[Tv(770), Tv(779)]),
    ((790, false, NAND2), &[Tv(787), Tv(789)]),
    ((792, false, AND2), &[Tv(535), Tv(791)]),
    ((795, false, NAND2), &[Tv(785), Tv(794)]),
    ((805, false, NAND2), &[Tv(802), Tv(804)]),
    ((807, false, AND2), &[Tv(535), Tv(806)]),
    ((810, false, NAND2), &[Tv(800), Tv(809)]),
    ((820, false, NAND2), &[Tv(817), Tv(819)]),
    ((822, false, AND2), &[Tv(535), Tv(821)]),
    ((825, false, NAND2), &[Tv(815), Tv(824)]),
    ((835, false, NAND2), &[Tv(832), Tv(834)]),
    ((837, false, AND2), &[Tv(535), Tv(836)]),
    ((840, false, NAND2), &[Tv(830), Tv(839)]),
    ((850, false, NAND2), &[Tv(847), Tv(849)]),
    ((852, false, AND2), &[Tv(535), Tv(851)]),
    ((855, false, NAND2), &[Tv(845), Tv(854)]),
    ((865, false, NAND2), &[Tv(862), Tv(864)]),
    ((867, false, AND2), &[Tv(535), Tv(866)]),
    ((870, false, NAND2), &[Tv(860), Tv(869)]),
    ((3, false, NAND2), &[Tv(0), Tv(2)]),
    ((5, false, AND2), &[Tv(535), Tv(4)]),
    ((8, false, NAND2), &[Tv(875), Tv(7)]),
    ((18, false, NAND2), &[Tv(15), Tv(17)]),
    ((20, false, AND2), &[Tv(535), Tv(19)]),
    ((23, false, NAND2), &[Tv(13), Tv(22)]),
    ((33, false, NAND2), &[Tv(30), Tv(32)]),
    ((35, false, AND2), &[Tv(535), Tv(34)]),
    ((38, false, NAND2), &[Tv(28), Tv(37)]),
    ((48, false, NAND2), &[Tv(45), Tv(47)]),
    ((50, false, AND2), &[Tv(535), Tv(49)]),
    ((53, false, NAND2), &[Tv(43), Tv(52)]),
    ((63, false, NAND2), &[Tv(60), Tv(62)]),
    ((65, false, AND2), &[Tv(535), Tv(64)]),
    ((68, false, NAND2), &[Tv(58), Tv(67)]),
    ((78, false, NAND2), &[Tv(75), Tv(77)]),
    ((80, false, AND2), &[Tv(535), Tv(79)]),
    ((83, false, NAND2), &[Tv(73), Tv(82)]),
    ((93, false, NAND2), &[Tv(90), Tv(92)]),
    ((95, false, AND2), &[Tv(535), Tv(94)]),
    ((98, false, NAND2), &[Tv(88), Tv(97)]),
    ((108, false, NAND2), &[Tv(105), Tv(107)]),
    ((110, false, AND2), &[Tv(535), Tv(109)]),
    ((113, false, NAND2), &[Tv(103), Tv(112)]),
    ((123, false, NAND2), &[Tv(120), Tv(122)]),
    ((125, false, AND2), &[Tv(535), Tv(124)]),
    ((128, false, NAND2), &[Tv(118), Tv(127)]),
    ((138, false, NAND2), &[Tv(135), Tv(137)]),
    ((140, false, AND2), &[Tv(535), Tv(139)]),
    ((143, false, NAND2), &[Tv(133), Tv(142)]),
    ((153, false, NAND2), &[Tv(150), Tv(152)]),
    ((155, false, AND2), &[Tv(535), Tv(154)]),
    ((158, false, NAND2), &[Tv(148), Tv(157)]),
    ((168, false, NAND2), &[Tv(165), Tv(167)]),
    ((170, false, AND2), &[Tv(535), Tv(169)]),
    ((173, false, NAND2), &[Tv(163), Tv(172)]),
    ((187, false, NAND2), &[Tv(501), Tv(186)]),
    ((188, false, OR2), &[Tv(218), Tv(501)]),
];

static LEVEL_19: [((usize, bool, CellType), &[GateInput]); 54] = [
    ((219, false, INV), &[Arg(3, 159)]),
    ((412, false, NOR2), &[Tv(339), Tv(411)]),
    ((422, false, AND2), &[Tv(417), Tv(421)]),
    ((442, false, AND2), &[Tv(432), Tv(441)]),
    ((466, false, AND2), &[Tv(453), Tv(465)]),
    ((602, false, AND2), &[Tv(568), Tv(601)]),
    ((652, false, INV), &[Tv(651)]),
    ((718, false, NAND2), &[Tv(715), Tv(717)]),
    ((721, false, AND2), &[Tv(601), Tv(720)]),
    ((733, false, NAND2), &[Tv(730), Tv(732)]),
    ((736, false, AND2), &[Tv(601), Tv(735)]),
    ((748, false, NAND2), &[Tv(745), Tv(747)]),
    ((751, false, AND2), &[Tv(601), Tv(750)]),
    ((763, false, NAND2), &[Tv(760), Tv(762)]),
    ((766, false, AND2), &[Tv(601), Tv(765)]),
    ((778, false, NAND2), &[Tv(775), Tv(777)]),
    ((781, false, AND2), &[Tv(601), Tv(780)]),
    ((793, false, NAND2), &[Tv(790), Tv(792)]),
    ((796, false, AND2), &[Tv(601), Tv(795)]),
    ((808, false, NAND2), &[Tv(805), Tv(807)]),
    ((811, false, AND2), &[Tv(601), Tv(810)]),
    ((823, false, NAND2), &[Tv(820), Tv(822)]),
    ((826, false, AND2), &[Tv(601), Tv(825)]),
    ((838, false, NAND2), &[Tv(835), Tv(837)]),
    ((841, false, AND2), &[Tv(601), Tv(840)]),
    ((853, false, NAND2), &[Tv(850), Tv(852)]),
    ((856, false, AND2), &[Tv(601), Tv(855)]),
    ((868, false, NAND2), &[Tv(865), Tv(867)]),
    ((871, false, AND2), &[Tv(601), Tv(870)]),
    ((6, false, NAND2), &[Tv(3), Tv(5)]),
    ((9, false, AND2), &[Tv(601), Tv(8)]),
    ((21, false, NAND2), &[Tv(18), Tv(20)]),
    ((24, false, AND2), &[Tv(601), Tv(23)]),
    ((36, false, NAND2), &[Tv(33), Tv(35)]),
    ((39, false, AND2), &[Tv(601), Tv(38)]),
    ((51, false, NAND2), &[Tv(48), Tv(50)]),
    ((54, false, AND2), &[Tv(601), Tv(53)]),
    ((66, false, NAND2), &[Tv(63), Tv(65)]),
    ((69, false, AND2), &[Tv(601), Tv(68)]),
    ((81, false, NAND2), &[Tv(78), Tv(80)]),
    ((84, false, AND2), &[Tv(601), Tv(83)]),
    ((96, false, NAND2), &[Tv(93), Tv(95)]),
    ((99, false, AND2), &[Tv(601), Tv(98)]),
    ((111, false, NAND2), &[Tv(108), Tv(110)]),
    ((114, false, AND2), &[Tv(601), Tv(113)]),
    ((126, false, NAND2), &[Tv(123), Tv(125)]),
    ((129, false, AND2), &[Tv(601), Tv(128)]),
    ((141, false, NAND2), &[Tv(138), Tv(140)]),
    ((144, false, AND2), &[Tv(601), Tv(143)]),
    ((156, false, NAND2), &[Tv(153), Tv(155)]),
    ((159, false, AND2), &[Tv(601), Tv(158)]),
    ((171, false, NAND2), &[Tv(168), Tv(170)]),
    ((174, false, AND2), &[Tv(601), Tv(173)]),
    ((189, false, NAND2), &[Tv(187), Tv(188)]),
];

static LEVEL_20: [((usize, bool, CellType), &[GateInput]); 52] = [
    ((423, false, AND2), &[Tv(412), Tv(422)]),
    ((467, false, AND2), &[Tv(442), Tv(466)]),
    ((603, false, NAND2), &[Tv(535), Tv(602)]),
    ((707, false, AND2), &[Tv(652), Tv(706)]),
    ((722, false, NAND2), &[Tv(718), Tv(721)]),
    ((723, false, OR2), &[Arg(3, 120), Tv(601)]),
    ((737, false, NAND2), &[Tv(733), Tv(736)]),
    ((738, false, OR2), &[Arg(3, 121), Tv(601)]),
    ((752, false, NAND2), &[Tv(748), Tv(751)]),
    ((753, false, OR2), &[Arg(3, 122), Tv(601)]),
    ((767, false, NAND2), &[Tv(763), Tv(766)]),
    ((768, false, OR2), &[Arg(3, 123), Tv(601)]),
    ((782, false, NAND2), &[Tv(778), Tv(781)]),
    ((783, false, OR2), &[Arg(3, 124), Tv(601)]),
    ((797, false, NAND2), &[Tv(793), Tv(796)]),
    ((798, false, OR2), &[Arg(3, 125), Tv(601)]),
    ((812, false, NAND2), &[Tv(808), Tv(811)]),
    ((813, false, OR2), &[Arg(3, 126), Tv(601)]),
    ((827, false, NAND2), &[Tv(823), Tv(826)]),
    ((828, false, OR2), &[Arg(3, 127), Tv(601)]),
    ((842, false, NAND2), &[Tv(838), Tv(841)]),
    ((843, false, OR2), &[Arg(3, 144), Tv(601)]),
    ((857, false, NAND2), &[Tv(853), Tv(856)]),
    ((858, false, OR2), &[Arg(3, 145), Tv(601)]),
    ((872, false, NAND2), &[Tv(868), Tv(871)]),
    ((873, false, OR2), &[Arg(3, 146), Tv(601)]),
    ((10, false, NAND2), &[Tv(6), Tv(9)]),
    ((11, false, OR2), &[Arg(3, 147), Tv(601)]),
    ((25, false, NAND2), &[Tv(21), Tv(24)]),
    ((26, false, OR2), &[Arg(3, 148), Tv(601)]),
    ((40, false, NAND2), &[Tv(36), Tv(39)]),
    ((41, false, OR2), &[Arg(3, 149), Tv(601)]),
    ((55, false, NAND2), &[Tv(51), Tv(54)]),
    ((56, false, OR2), &[Arg(3, 150), Tv(601)]),
    ((70, false, NAND2), &[Tv(66), Tv(69)]),
    ((71, false, OR2), &[Arg(3, 151), Tv(601)]),
    ((85, false, NAND2), &[Tv(81), Tv(84)]),
    ((86, false, OR2), &[Arg(3, 152), Tv(601)]),
    ((100, false, NAND2), &[Tv(96), Tv(99)]),
    ((101, false, OR2), &[Arg(3, 153), Tv(601)]),
    ((115, false, NAND2), &[Tv(111), Tv(114)]),
    ((116, false, OR2), &[Arg(3, 154), Tv(601)]),
    ((130, false, NAND2), &[Tv(126), Tv(129)]),
    ((131, false, OR2), &[Arg(3, 155), Tv(601)]),
    ((145, false, NAND2), &[Tv(141), Tv(144)]),
    ((146, false, OR2), &[Arg(3, 156), Tv(601)]),
    ((160, false, NAND2), &[Tv(156), Tv(159)]),
    ((161, false, OR2), &[Arg(3, 157), Tv(601)]),
    ((175, false, NAND2), &[Tv(171), Tv(174)]),
    ((176, false, OR2), &[Arg(3, 158), Tv(601)]),
    ((190, false, NAND2), &[Tv(601), Tv(189)]),
    ((191, false, OR2), &[Tv(219), Tv(601)]),
];

static LEVEL_21: [((usize, bool, CellType), &[GateInput]); 26] = [
    ((468, false, AND2), &[Tv(423), Tv(467)]),
    ((708, false, NOR2), &[Tv(603), Tv(707)]),
    ((724, false, AND2), &[Tv(722), Tv(723)]),
    ((739, false, AND2), &[Tv(737), Tv(738)]),
    ((754, false, AND2), &[Tv(752), Tv(753)]),
    ((769, false, AND2), &[Tv(767), Tv(768)]),
    ((784, false, AND2), &[Tv(782), Tv(783)]),
    ((799, false, AND2), &[Tv(797), Tv(798)]),
    ((814, false, AND2), &[Tv(812), Tv(813)]),
    ((829, false, AND2), &[Tv(827), Tv(828)]),
    ((844, false, AND2), &[Tv(842), Tv(843)]),
    ((859, false, AND2), &[Tv(857), Tv(858)]),
    ((874, false, AND2), &[Tv(872), Tv(873)]),
    ((12, false, AND2), &[Tv(10), Tv(11)]),
    ((27, false, AND2), &[Tv(25), Tv(26)]),
    ((42, false, AND2), &[Tv(40), Tv(41)]),
    ((57, false, AND2), &[Tv(55), Tv(56)]),
    ((72, false, AND2), &[Tv(70), Tv(71)]),
    ((87, false, AND2), &[Tv(85), Tv(86)]),
    ((102, false, AND2), &[Tv(100), Tv(101)]),
    ((117, false, AND2), &[Tv(115), Tv(116)]),
    ((132, false, AND2), &[Tv(130), Tv(131)]),
    ((147, false, AND2), &[Tv(145), Tv(146)]),
    ((162, false, AND2), &[Tv(160), Tv(161)]),
    ((177, false, AND2), &[Tv(175), Tv(176)]),
    ((192, false, NAND2), &[Tv(190), Tv(191)]),
];

static LEVEL_22: [((usize, bool, CellType), &[GateInput]); 27] = [
    ((2, true, INV), &[Tv(468)]),
    ((0, true, AND2), &[Tv(468), Tv(603)]),
    ((1, true, AND2), &[Tv(468), Tv(708)]),
    ((3, true, AND2), &[Tv(468), Tv(724)]),
    ((4, true, AND2), &[Tv(468), Tv(739)]),
    ((5, true, AND2), &[Tv(468), Tv(754)]),
    ((6, true, AND2), &[Tv(468), Tv(769)]),
    ((7, true, AND2), &[Tv(468), Tv(784)]),
    ((8, true, AND2), &[Tv(468), Tv(799)]),
    ((9, true, AND2), &[Tv(468), Tv(814)]),
    ((10, true, AND2), &[Tv(468), Tv(829)]),
    ((11, true, AND2), &[Tv(468), Tv(844)]),
    ((12, true, AND2), &[Tv(468), Tv(859)]),
    ((13, true, AND2), &[Tv(468), Tv(874)]),
    ((14, true, AND2), &[Tv(468), Tv(12)]),
    ((15, true, AND2), &[Tv(468), Tv(27)]),
    ((16, true, AND2), &[Tv(468), Tv(42)]),
    ((17, true, AND2), &[Tv(468), Tv(57)]),
    ((18, true, AND2), &[Tv(468), Tv(72)]),
    ((19, true, AND2), &[Tv(468), Tv(87)]),
    ((20, true, AND2), &[Tv(468), Tv(102)]),
    ((21, true, AND2), &[Tv(468), Tv(117)]),
    ((22, true, AND2), &[Tv(468), Tv(132)]),
    ((23, true, AND2), &[Tv(468), Tv(147)]),
    ((24, true, AND2), &[Tv(468), Tv(162)]),
    ((25, true, AND2), &[Tv(468), Tv(177)]),
    ((26, true, AND2), &[Tv(468), Tv(192)]),
];

static PRUNE_14: [usize; 40] = [
  376,
  579,
  342,
  309,
  489,
  523,
  307,
  532,
  285,
  499,
  578,
  330,
  181,
  340,
  577,
  383,
  360,
  575,
  327,
  406,
  472,
  573,
  280,
  281,
  506,
  448,
  594,
  302,
  584,
  570,
  277,
  582,
  571,
  569,
  524,
  287,
  490,
  378,
  209,
  592,
];

static PRUNE_2: [usize; 6] = [
  363,
  362,
  226,
  290,
  234,
  289,
];

static PRUNE_21: [usize; 51] = [
  872,
  175,
  827,
  782,
  26,
  467,
  737,
  873,
  25,
  160,
  70,
  115,
  161,
  71,
  116,
  858,
  813,
  768,
  723,
  56,
  11,
  191,
  101,
  146,
  767,
  722,
  812,
  857,
  190,
  145,
  55,
  100,
  10,
  842,
  797,
  752,
  707,
  798,
  753,
  843,
  176,
  86,
  131,
  41,
  828,
  783,
  738,
  130,
  40,
  85,
  423,
];

static PRUNE_3: [usize; 3] = [
  364,
  291,
  266,
];

static PRUNE_9: [usize; 27] = [
  545,
  297,
  354,
  544,
  668,
  542,
  543,
  541,
  539,
  246,
  370,
  538,
  549,
  550,
  629,
  561,
  548,
  627,
  649,
  559,
  639,
  537,
  693,
  682,
  704,
  310,
  547,
];

static PRUNE_15: [usize; 38] = [
  500,
  331,
  343,
  365,
  183,
  533,
  341,
  296,
  576,
  328,
  283,
  407,
  587,
  294,
  373,
  396,
  182,
  597,
  348,
  325,
  449,
  371,
  405,
  585,
  461,
  583,
  403,
  595,
  593,
  300,
  525,
  458,
  400,
  580,
  333,
  491,
  367,
  344,
];

static PRUNE_16: [usize; 62] = [
  455,
  534,
  207,
  184,
  433,
  444,
  196,
  205,
  408,
  194,
  443,
  195,
  217,
  454,
  206,
  204,
  215,
  588,
  216,
  193,
  428,
  586,
  462,
  214,
  598,
  429,
  203,
  438,
  393,
  596,
  201,
  292,
  574,
  450,
  202,
  326,
  213,
  459,
  211,
  369,
  200,
  425,
  212,
  437,
  345,
  424,
  322,
  198,
  401,
  311,
  199,
  323,
  334,
  210,
  413,
  447,
  197,
  298,
  377,
  208,
  581,
  434,
];

static PRUNE_22: [usize; 27] = [
  874,
  162,
  117,
  27,
  72,
  724,
  859,
  814,
  769,
  12,
  57,
  192,
  102,
  147,
  844,
  799,
  754,
  87,
  42,
  132,
  177,
  708,
  603,
  829,
  784,
  739,
  468,
];

static PRUNE_4: [usize; 14] = [
  624,
  610,
  260,
  261,
  227,
  259,
  270,
  271,
  235,
  256,
  257,
  254,
  243,
  265,
];

static PRUNE_10: [usize; 32] = [
  556,
  230,
  388,
  546,
  555,
  386,
  239,
  240,
  274,
  238,
  317,
  385,
  552,
  564,
  316,
  553,
  282,
  562,
  314,
  630,
  381,
  313,
  683,
  232,
  650,
  402,
  560,
  276,
  355,
  231,
  332,
  705,
];

static PRUNE_11: [usize; 39] = [
  477,
  353,
  511,
  387,
  557,
  512,
  478,
  318,
  565,
  475,
  554,
  509,
  507,
  563,
  315,
  518,
  473,
  349,
  372,
  494,
  247,
  484,
  303,
  527,
  470,
  222,
  504,
  471,
  505,
  482,
  516,
  469,
  503,
  492,
  479,
  502,
  389,
  513,
  299,
];

static PRUNE_17: [usize; 79] = [
  861,
  308,
  590,
  61,
  106,
  185,
  16,
  816,
  771,
  726,
  151,
  848,
  104,
  149,
  803,
  758,
  59,
  713,
  589,
  409,
  14,
  375,
  1,
  136,
  711,
  384,
  463,
  46,
  418,
  91,
  419,
  599,
  430,
  306,
  304,
  710,
  439,
  846,
  350,
  801,
  756,
  451,
  415,
  743,
  44,
  833,
  89,
  788,
  337,
  134,
  786,
  414,
  741,
  166,
  572,
  121,
  346,
  876,
  831,
  380,
  426,
  178,
  460,
  336,
  31,
  76,
  379,
  773,
  74,
  119,
  728,
  29,
  435,
  312,
  445,
  456,
  863,
  164,
  818,
];

static PRUNE_5: [usize; 40] = [
  252,
  263,
  264,
  241,
  634,
  656,
  612,
  251,
  657,
  655,
  667,
  250,
  272,
  633,
  293,
  394,
  248,
  654,
  609,
  361,
  619,
  698,
  653,
  324,
  674,
  606,
  268,
  672,
  604,
  605,
  255,
  616,
  244,
  366,
  253,
  659,
  660,
  288,
  694,
  671,
];

static PRUNE_18: [usize; 136] = [
  218,
  49,
  94,
  4,
  410,
  804,
  105,
  150,
  759,
  139,
  714,
  15,
  60,
  839,
  591,
  794,
  600,
  431,
  860,
  37,
  815,
  82,
  770,
  849,
  725,
  420,
  172,
  127,
  452,
  779,
  734,
  869,
  824,
  712,
  92,
  464,
  791,
  13,
  137,
  746,
  2,
  47,
  148,
  847,
  802,
  58,
  757,
  103,
  836,
  755,
  834,
  135,
  338,
  789,
  90,
  744,
  169,
  67,
  112,
  845,
  800,
  22,
  440,
  305,
  0,
  124,
  45,
  34,
  79,
  32,
  866,
  742,
  43,
  167,
  821,
  88,
  776,
  77,
  122,
  731,
  157,
  427,
  382,
  709,
  416,
  19,
  347,
  832,
  133,
  787,
  854,
  279,
  809,
  764,
  719,
  142,
  52,
  875,
  97,
  446,
  830,
  774,
  30,
  75,
  729,
  154,
  436,
  64,
  109,
  785,
  7,
  740,
  864,
  120,
  819,
  165,
  817,
  73,
  772,
  118,
  851,
  107,
  727,
  28,
  152,
  806,
  749,
  501,
  862,
  163,
  457,
  761,
  186,
  62,
  716,
  17,
];

static PRUNE_6: [usize; 37] = [
  669,
  635,
  670,
  286,
  613,
  228,
  262,
  611,
  690,
  645,
  646,
  689,
  632,
  666,
  621,
  249,
  622,
  701,
  665,
  236,
  687,
  643,
  699,
  359,
  269,
  618,
  675,
  664,
  267,
  673,
  663,
  640,
  357,
  684,
  661,
  695,
  614,
];

static PRUNE_12: [usize; 28] = [
  320,
  352,
  476,
  510,
  487,
  566,
  521,
  319,
  497,
  519,
  530,
  485,
  483,
  517,
  528,
  404,
  495,
  540,
  335,
  493,
  391,
  514,
  390,
  480,
  526,
  278,
  558,
  536,
];

static PRUNE_13: [usize; 27] = [
  275,
  488,
  567,
  522,
  531,
  486,
  508,
  498,
  374,
  520,
  351,
  180,
  395,
  474,
  496,
  529,
  551,
  224,
  179,
  301,
  223,
  358,
  392,
  221,
  481,
  515,
  321,
];

static PRUNE_19: [usize; 81] = [
  421,
  173,
  83,
  128,
  432,
  805,
  760,
  715,
  95,
  140,
  38,
  568,
  850,
  138,
  837,
  780,
  735,
  465,
  792,
  93,
  747,
  3,
  48,
  80,
  125,
  35,
  441,
  835,
  790,
  339,
  745,
  170,
  870,
  825,
  453,
  417,
  68,
  113,
  23,
  158,
  810,
  765,
  720,
  855,
  123,
  168,
  822,
  777,
  33,
  78,
  732,
  867,
  865,
  8,
  820,
  651,
  775,
  98,
  143,
  53,
  20,
  110,
  730,
  155,
  65,
  18,
  187,
  717,
  63,
  852,
  153,
  807,
  108,
  762,
  188,
  5,
  50,
  411,
  840,
  795,
  750,
];

static PRUNE_1: [usize; 3] = [
  225,
  233,
  242,
];

static PRUNE_7: [usize; 28] = [
  658,
  680,
  636,
  647,
  679,
  691,
  398,
  623,
  702,
  700,
  295,
  644,
  620,
  676,
  677,
  688,
  641,
  608,
  662,
  617,
  696,
  245,
  685,
  356,
  368,
  615,
  637,
  220,
];

static PRUNE_20: [usize; 57] = [
  748,
  601,
  466,
  838,
  793,
  219,
  422,
  602,
  36,
  81,
  442,
  736,
  871,
  826,
  781,
  159,
  114,
  126,
  171,
  24,
  69,
  868,
  811,
  766,
  721,
  823,
  778,
  733,
  156,
  111,
  21,
  66,
  652,
  856,
  718,
  99,
  9,
  54,
  144,
  189,
  841,
  751,
  796,
  853,
  808,
  763,
  706,
  129,
  174,
  39,
  535,
  84,
  6,
  51,
  412,
  141,
  96,
];

static PRUNE_8: [usize; 22] = [
  626,
  703,
  229,
  681,
  692,
  399,
  273,
  397,
  329,
  284,
  678,
  631,
  642,
  237,
  607,
  686,
  697,
  258,
  628,
  638,
  648,
  625,
];

fn prune<'a, E: BoolEvaluator>(
    temp_nodes: &mut HashMap<usize, FheBool<'a, E>>,
    temp_node_ids: &[usize],
) {
  for x in temp_node_ids {
    temp_nodes.remove(&x);
  }
}

pub fn get_cell<'a, E: BoolEvaluator>(items: &Vec<FheBool<'a, E>>, player_coord: &Vec<FheBool<'a, E>>, players: &Vec<FheBool<'a, E>>, query_coord: &Vec<FheBool<'a, E>>) -> Vec<FheBool<'a, E>> {
    let args: &[&Vec<FheBool<'a, E>>] = &[player_coord, query_coord, items, players];

    let mut temp_nodes = HashMap::new();
    let mut out = Vec::new();
    out.resize(27, None);

    let mut run_level = |
    temp_nodes: &mut HashMap<usize, FheBool<'a, E>>,
    tasks: &[((usize, bool, CellType), &[GateInput])]
    | {
        let updates = tasks
            .into_par_iter()
            .map(|(k, task_args)| {
                let (id, is_output, celltype) = k;
                let task_args = task_args.into_iter()
                .map(|arg| match arg {
                    Cst(false) => todo!(),
                    Cst(true) => todo!(),
                    Arg(pos, ndx) => &args[*pos][*ndx],
                    Tv(ndx) => &temp_nodes[ndx],
                    Output(ndx) => &out[*ndx]
                                .as_ref()
                                .expect(&format!("Output node {ndx} not found")),
                }).collect::<Vec<_>>();

                let gate_func = |args: &[&FheBool<'a, E>]| match celltype {
                    AND2 => args[0] & args[1],
                    NAND2 => args[0].bitnand(args[1]),
                    OR2 => args[0] | args[1],
                    NOR2 => args[0].bitnor(args[1]),
                    XOR2 => args[0] ^ args[1],
                    XNOR2 => args[0].bitxnor(args[1]),
                    INV => !args[0],
                };
                
                ((*id, *is_output), gate_func(&task_args))
            })
            .collect::<Vec<_>>();
        updates.into_iter().for_each(|(k, v)| {
            let (index, is_output) = k;
            if is_output {
                out[index] = Some(v);
            } else {
                temp_nodes.insert(index, v);
            }
        });
    };

        run_level(&mut temp_nodes, &LEVEL_0);
    run_level(&mut temp_nodes, &LEVEL_1);
    prune(&mut temp_nodes, &PRUNE_1);
    run_level(&mut temp_nodes, &LEVEL_2);
    prune(&mut temp_nodes, &PRUNE_2);
    run_level(&mut temp_nodes, &LEVEL_3);
    prune(&mut temp_nodes, &PRUNE_3);
    run_level(&mut temp_nodes, &LEVEL_4);
    prune(&mut temp_nodes, &PRUNE_4);
    run_level(&mut temp_nodes, &LEVEL_5);
    prune(&mut temp_nodes, &PRUNE_5);
    run_level(&mut temp_nodes, &LEVEL_6);
    prune(&mut temp_nodes, &PRUNE_6);
    run_level(&mut temp_nodes, &LEVEL_7);
    prune(&mut temp_nodes, &PRUNE_7);
    run_level(&mut temp_nodes, &LEVEL_8);
    prune(&mut temp_nodes, &PRUNE_8);
    run_level(&mut temp_nodes, &LEVEL_9);
    prune(&mut temp_nodes, &PRUNE_9);
    run_level(&mut temp_nodes, &LEVEL_10);
    prune(&mut temp_nodes, &PRUNE_10);
    run_level(&mut temp_nodes, &LEVEL_11);
    prune(&mut temp_nodes, &PRUNE_11);
    run_level(&mut temp_nodes, &LEVEL_12);
    prune(&mut temp_nodes, &PRUNE_12);
    run_level(&mut temp_nodes, &LEVEL_13);
    prune(&mut temp_nodes, &PRUNE_13);
    run_level(&mut temp_nodes, &LEVEL_14);
    prune(&mut temp_nodes, &PRUNE_14);
    run_level(&mut temp_nodes, &LEVEL_15);
    prune(&mut temp_nodes, &PRUNE_15);
    run_level(&mut temp_nodes, &LEVEL_16);
    prune(&mut temp_nodes, &PRUNE_16);
    run_level(&mut temp_nodes, &LEVEL_17);
    prune(&mut temp_nodes, &PRUNE_17);
    run_level(&mut temp_nodes, &LEVEL_18);
    prune(&mut temp_nodes, &PRUNE_18);
    run_level(&mut temp_nodes, &LEVEL_19);
    prune(&mut temp_nodes, &PRUNE_19);
    run_level(&mut temp_nodes, &LEVEL_20);
    prune(&mut temp_nodes, &PRUNE_20);
    run_level(&mut temp_nodes, &LEVEL_21);
    prune(&mut temp_nodes, &PRUNE_21);
    run_level(&mut temp_nodes, &LEVEL_22);
    prune(&mut temp_nodes, &PRUNE_22);

    

    out.into_iter().map(|c| c.unwrap()).collect()
}

